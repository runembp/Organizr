@page "/PageSetup"
@using Organizr.Application.Requests.Configurations
@using Organizr.Domain.ApplicationConstants
@using Organizr.Domain.Entities
@using Organizr.Domain.Enums
@using Organizr.Application.Commands.Configurations

<h3>Sideopsætning</h3>

<Tabs SelectedTab="@_selectedTab" SelectedTabChanged="@OnSelectedTabChanged" RenderMode="TabsRenderMode.LazyReload">
    <Items>
        <Tab Name="Frontpage">Forside</Tab>
        <Tab Name="CreateMembership">Opret Medlemskab</Tab>
        <Tab Name="AboutUs">Om os</Tab>
        <Tab Name="Contact">Kontakt</Tab>
    </Items>
    <Content>
        <TabPanel Name="Frontpage">
            <PageEdit Configuration="ConfigFrontpage" />
        </TabPanel>
        <TabPanel Name="CreateMembership">
            <PageEdit Configuration="ConfigCreateMembership" />
        </TabPanel>
        <TabPanel Name="AboutUs">
            <PageEdit Configuration="ConfigAboutUs" />
        </TabPanel>
        <TabPanel Name="Contact">
            <PageEdit Configuration="ConfigContact" />
        </TabPanel>
    </Content>
</Tabs>

<Button Color="Color.Primary" Clicked="OnSaveButton_Clicked">Gem</Button>

<Alert Visible="_configurationsUpdatedSucces">
    <AlertMessage TextColor="TextColor.Success">Sideopsætningen er gemt</AlertMessage>
</Alert>

<Alert Visible="_configurationsUpdatedError">
    <AlertMessage TextColor="TextColor.Danger">Sideopsætningen blev ikke gemt - prøv venligst igen</AlertMessage>
</Alert>

@code{
    private Configuration ConfigFrontpage { get; set; } = new();
    private Configuration ConfigCreateMembership { get; set; } = new(); 
    private Configuration ConfigAboutUs { get; set; } = new();
    private Configuration ConfigContact { get; set; } = new();

    private bool _configurationsUpdatedError; 
    private bool _configurationsUpdatedSucces; 
    
    string _selectedTab = "Frontpage";

    protected override async Task OnInitializedAsync()
    {
        var pageSetupConfigurations = await Mediator.Send(new GetAllConfigurationsOfTypeRequest {ConfigType = ConfigType.PageSetup});
        ConfigFrontpage = pageSetupConfigurations.Configurations.First(x => x.Id == ConfigurationIds.FrontpageTopTextBox);
        ConfigCreateMembership = pageSetupConfigurations.Configurations.First(x => x.Id == ConfigurationIds.CreateMembershipTopText);
        ConfigAboutUs = pageSetupConfigurations.Configurations.First(x => x.Id == ConfigurationIds.AboutUsPage);
        ConfigContact = pageSetupConfigurations.Configurations.First(x => x.Id == ConfigurationIds.ContactPageTopTextBox);
    }

    private Task OnSelectedTabChanged( string name )
    {
        _selectedTab = name;

        return Task.CompletedTask;
    }

    private async Task OnSaveButton_Clicked()
    {
        _configurationsUpdatedError = false;
        _configurationsUpdatedSucces = false;
        
        var command = new UpdateConfigurationsOfTypePageSetupCommand
        {
            Frontpage = ConfigFrontpage,
            CreateMembership = ConfigCreateMembership,
            AboutUs = ConfigAboutUs,
            Contact = ConfigContact
        };

        var response = await Mediator.Send(command);

        if (response.Succeeded)
        {
            _configurationsUpdatedSucces = true;
        }
        else
        {
            _configurationsUpdatedError = true;
        }
    }
}