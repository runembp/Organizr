@page "/configurations"

@attribute [Authorize]

<h3>Konfigurationer</h3>

<CardDeck Padding="Padding.Is3">
    <Card ColumnSize="ColumnSize.Is6">
        <CardBody>
            <CardTitle Size="5">Nyhedskonfigurationer</CardTitle>
            <Field>
                <FieldLabel>Aktiver kommentarer på Nyheder</FieldLabel>
                <Check TValue="bool?" @bind-Checked="@ConfigActivateCommentsOnNews.BoolValue">Aktiv</Check>
            </Field>
            <Field>
                <FieldLabel>Aktiver mulighed for at skrive kommentarer til Nyheder for Administratorer</FieldLabel>
                <Check TValue="bool?" @bind-Checked="@ConfigActivatedAdministratorCommentOnNews.BoolValue">Aktiv</Check>
            </Field>
            <Field>
                <FieldLabel>Aktiver mulighed for at skrive kommentarer til Nyheder for Medlemmer</FieldLabel>
                <Check TValue="bool?" @bind-Checked="ConfigActivateBasicMemberCommentOnNews.BoolValue">Aktiv</Check>
            </Field>
        </CardBody>
    </Card>

    <Card ColumnSize="ColumnSize.Is6">
        <CardBody>
            <CardTitle Size="5">Opret nyheder</CardTitle>
            <Field>
                <FieldLabel>Giv alle medlemmer mulighed for at oprette nyheder?</FieldLabel>
                <Check TValue="bool?" @bind-Checked="@ConfigActivateAbilityForAllMembersToCreateNews.BoolValue">Aktiv</Check>
            </Field>
        </CardBody>
    </Card>
</CardDeck>

<CardDeck Padding="Padding.Is3">
    <Card ColumnSize="ColumnSize.Is6">
        <CardBody>
            <CardTitle Size="5">Medlemsskab</CardTitle>
            <Field>
                <FieldLabel>Vælg hvilken gruppe der skal tilmeldes ved oprettelse af Medlemsskab</FieldLabel>
                <Select TValue="int?" Width="Width.Is50" @bind-SelectedValue="@ConfigPredeterminedGroupNewMembersAssignedTo.IdValue">
                    <SelectItem Value="0">Ingen</SelectItem>
                    @foreach (var group in GroupList)
                    {
                        <SelectItem Value="@group.Id">@group.Name</SelectItem>
                    }
                </Select>
            </Field>
        </CardBody>
    </Card>

    <Card ColumnSize="ColumnSize.Is6">
        <CardBody>
            <CardTitle Size="5">Organisations data</CardTitle>
            <Field>
                <FieldLabel>Organisationens adresse</FieldLabel>
                <TextEdit @bind-Text="ConfigOrganizationAddress.StringValue"/>
            </Field>
            <Field>
                <FieldLabel>Organisationens Telefon</FieldLabel>
                <TextEdit @bind-Text="ConfigOrganizationPhoneNumber.StringValue"/>
            </Field>
            <Field>
                <FieldLabel>Organisations Email</FieldLabel>
                <TextEdit @bind-Text="ConfigOrganizationEmail.StringValue"/>
            </Field>
        </CardBody>
    </Card>
</CardDeck>

<Button Color="Color.Primary" Clicked="@OnSaveButton_Clicked">Gem</Button>

<Snackbar @ref="_snackbarSuccess" Color="SnackbarColor.Success">
    <SnackbarBody TextWeight="TextWeight.Bold">
        Konfigurationerne er blevet gemt
    </SnackbarBody>
</Snackbar>

<Snackbar @ref="_snackbarError" Color="SnackbarColor.Danger">
    <SnackbarBody TextWeight="TextWeight.Bold">
        Konfigurationerne kunne ikke gemmes
    </SnackbarBody>
</Snackbar>

@code {
    private List<Configuration> ConfigurationList { get; set; } = new();
    private List<MemberGroup> GroupList { get; set; } = new();

    private Configuration ConfigOrganizationAddress { get; set; } = new();
    private Configuration ConfigOrganizationPhoneNumber { get; set; } = new();
    private Configuration ConfigOrganizationEmail { get; set; } = new();
    private Configuration ConfigPredeterminedGroupNewMembersAssignedTo { get; set; } = new();
    private Configuration ConfigActivateCommentsOnNews { get; set; } = new();
    private Configuration ConfigActivatedAdministratorCommentOnNews { get; set; } = new();
    private Configuration ConfigActivateBasicMemberCommentOnNews { get; set; } = new();
    private Configuration ConfigActivateAbilityForAllMembersToCreateNews { get; set; } = new();

    private Snackbar _snackbarSuccess = new();
    private Snackbar _snackbarError = new();

    protected override async Task OnInitializedAsync()
    {
        var configurationList = await ConfigurationService.GetAllConfigurationsOfType(ConfigType.Configuration);
        var groupList = await GroupService.GetAllGroups();

        ConfigurationList = configurationList;
        GroupList = groupList!.ToList();

        await SetConfigurationValues();
    }

    private Task SetConfigurationValues()
    {
        ConfigOrganizationAddress = ConfigurationList.First(config => config.Id == ConfigurationIds.OrganizationAddress);
        ConfigOrganizationPhoneNumber = ConfigurationList.First(config => config.Id == ConfigurationIds.OrganizationPhoneNumber);
        ConfigOrganizationEmail = ConfigurationList.First(config => config.Id == ConfigurationIds.OrganizationEmailAddress);
        ConfigPredeterminedGroupNewMembersAssignedTo = ConfigurationList.First(config => config.Id == ConfigurationIds.PredeterminedGroupToAssignNewMembersTo);
        ConfigActivateCommentsOnNews = ConfigurationList.First(config => config.Id == ConfigurationIds.ActivateCommentsOnNews);
        ConfigActivatedAdministratorCommentOnNews = ConfigurationList.First(config => config.Id == ConfigurationIds.ActivateAdministratorMemberAbilityToCommentOnNews);
        ConfigActivateBasicMemberCommentOnNews = ConfigurationList.First(config => config.Id == ConfigurationIds.ActivateBasicMemberAbilityToCommentOnNews);
        ConfigActivateAbilityForAllMembersToCreateNews = ConfigurationList.First(config => config.Id == ConfigurationIds.ActivateAbilityForAllMembersToCreateNews);
        return Task.CompletedTask;
    }

    private async Task OnSaveButton_Clicked()
    {
        var updatedConfigurations = new List<Configuration>
        {
            ConfigOrganizationAddress,
            ConfigOrganizationEmail,
            ConfigOrganizationPhoneNumber,
            ConfigActivateCommentsOnNews,
            ConfigPredeterminedGroupNewMembersAssignedTo,
            ConfigActivateAbilityForAllMembersToCreateNews,
            ConfigActivatedAdministratorCommentOnNews,
            ConfigActivateBasicMemberCommentOnNews
        };

        var result = await ConfigurationService.UpdateConfigurationsOfType(ConfigType.Configuration, updatedConfigurations);
        
        if (!result.IsSuccessStatusCode)
        {
            await _snackbarError.Show();
        }
        else
        {
            await _snackbarSuccess.Show();
        }
    }

}