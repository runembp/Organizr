@using Organizr.Application.Services
@using Organizr.Application.Requests
@inject AuthenticationService AuthenticationService;
@inject NavigationManager NavigationManager


<Div Flex="Flex.JustifyContent.Center">
    <PageTitle>Organizr</PageTitle>

    <Field ColumnSize="ColumnSize.Is4">
        <FieldLabel>Email address</FieldLabel>
        <TextEdit Role="TextRole.Email" Placeholder="Indtast email" @bind-Text="_username" />
        <FieldLabel>Password</FieldLabel>
        <TextEdit Role="TextRole.Password" Placeholder="Indtast password" @bind-Text="_password" />
    </Field>

    <Alert Visible="ShowErrors" Color="Color.Danger">
        <AlertMessage>Brugernavn eller password er forkert</AlertMessage>
    </Alert>
</Div>
<Div Flex="Flex.JustifyContent.Center">
    <Button Color="Color.Primary" Clicked="OnLoginButton_Clicked">Login</Button>
</Div>


@code {

    private string _username = string.Empty;
    private string _password = string.Empty;
    private bool ShowErrors { get; set; }

    private readonly LoginUserRequest _loginUserRequest = new();

    private async Task OnLoginButton_Clicked()
    {
        _loginUserRequest.Email = _username;
        _loginUserRequest.Password = _password;

        var response = await AuthenticationService.LoginAsOrganizationAdministrator(_loginUserRequest);

        if (response.Succeeded)
        {
            NavigationManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            ShowErrors = true;
        }
    }
}