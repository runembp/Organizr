<Modal @ref="_addMemberModal">
    <ModalContent Centered>
        <ModalHeader>
            Tilføj medlem til @Group.Name
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Vælg medlem: </FieldLabel>
                <Select TValue="int" @bind-SelectedValue="SelectedMemberId">
                    @foreach (var member in AllMembersList)
                    {
                        <SelectItem Value="member.Id">@member.FirstName @member.LastName</SelectItem>
                    }
                </Select>
            </Field>
        </ModalBody>
        <ModalFooter>
            <Div>
                <Button Color="Color.Primary" Clicked="OnAddMemberButton_Clicked">Gem</Button>
                <Button Color="Color.Secondary" Clicked="OnCancelButton_Clicked">Afbryd</Button>
            </Div>
            <br/>
        </ModalFooter>
    </ModalContent>
</Modal>

<Snackbar @ref="_snackbarSuccess" Color="SnackbarColor.Success">
    <SnackbarBody TextWeight="TextWeight.Bold">
        (@_selectedMember.Id) @_selectedMember.FirstName @_selectedMember.LastName er tilføjet til @Group.Name
    </SnackbarBody>
</Snackbar>

<Snackbar @ref="_snackbarError" Color="SnackbarColor.Danger">
    <SnackbarBody TextWeight="TextWeight.Bold">
        (@_selectedMember.Id) @_selectedMember.FirstName @_selectedMember.LastName kunne ikke tilføjes til @Group.Name
    </SnackbarBody>
</Snackbar>

@code
{
    [Parameter]
    public MemberGroup Group { get; set; } = new();

    [Parameter]
    public EventCallback OnGroupContentChanged { get; set; }

    private List<Member> AllMembersList { get; set; } = new();
    private int SelectedMemberId { get; set; }
    private Member _selectedMember = new();
    private Modal? _addMemberModal;
    private Snackbar _snackbarSuccess = new();
    private Snackbar _snackbarError = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            AllMembersList = await MemberService.GetAllMembers();
        }

        AllMembersList = AllMembersList.Where(x => !x.Groups.Contains(Group)).ToList();
    }

    public async Task Show()
    {
        await _addMemberModal!.Show();
    }

    private async Task OnAddMemberButton_Clicked()
    {
        var result = await GroupService.AddMemberToGroup(Group.Id, SelectedMemberId);

        if (result is null)
        {
            await _snackbarError.Show();
            return;
        }

        _selectedMember = result.Members.First(x => x.Id == SelectedMemberId);
        Group = result;
        await _snackbarSuccess.Show();
        await _addMemberModal!.Hide();
        await OnGroupContentChanged.InvokeAsync();
    }

    private async Task OnCancelButton_Clicked()
    {
        await _addMemberModal!.Hide();
    }
}