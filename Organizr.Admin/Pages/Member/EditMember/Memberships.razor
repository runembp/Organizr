<Div>&nbsp;</Div>

<Heading Size="HeadingSize.Is5"> 
    Medlemsskaber for @Member.GetFullName()
</Heading>

<Row Style="padding: 2rem" Flex="Flex.JustifyContent.End">
    <Button Color="Color.Primary" Clicked="OnAddMembershipButton_Clicked">Opret medlemsskab</Button>
</Row>

@if (MembershipsList.IsNullOrEmpty())
{
    <Heading Size="HeadingSize.Is5">
        @Member.GetFullNameWithId() har ikke nogen medlemsskaber
    </Heading>
}
else
{
    <DataGrid TItem="Membership"
              Data="@MembershipsList"
              RowSelectable="_ => false">
        <DataGridColumns>
            <DataGridColumn Field="MemberGroup.Id" Caption="Medlemskab Id" Sortable="true">
                <DisplayTemplate>
                    <Button Clicked="() => OnEditMemberGroupLink_Clicked(context.MemberGroup.Id)" Color="Color.Link">@context.MemberGroup.Id</Button>
                </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn Field="MemberGroup.Name" Caption="Gruppe Navn" Sortable="true"/>
            <DataGridColumn Field="@nameof(Membership.Id)" Caption="Rolle" Sortable="true" Editable>
                <DisplayTemplate>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is2">
                            <Paragraph>@context.Role.Description</Paragraph>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is1">
                            <Button Size="Size.Small" Color="Color.Secondary" Clicked="() => OnEditRoleButton_Clicked(context.Id)">Rediger</Button>
                        </Column>
                    </Row>
                </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn Field="MemberGroup.Id" Caption="Administrer">
                <DisplayTemplate>
                    <Button Size="Size.Small" Color="Color.Danger" Clicked="() => OnRemoveMembershipButton_Clicked(context.Id)">Fjern</Button>
                </DisplayTemplate>
            </DataGridColumn>
        </DataGridColumns>
    </DataGrid>
}

<RemoveMembershipModal @ref="_removeMembershipModal" Member="Member" Memberships="MembershipsList" MembershipToRemove="_membershipToRemove" OnGroupRemoved="OnStateChanged"/>
<AddMembershipModal @ref="_addMembershipModal" Member="Member" Memberships="MembershipsList" OnMembershipAdded="OnStateChanged"/>
<ChangeMembershipRole @ref="_changeMembershipRoleModal" Membership="_membershipToChangeRole" Memberships="MembershipsList" OnRoleChanged="OnStateChanged"/>

@code {

    [CascadingParameter]
    public Member Member { get; set; } = new();

    private List<Membership> MembershipsList { get; set; } = new();

    private int _membershipId;
    private int _changedRoleId;
    private Membership _membershipToChangeRole = new();
    private Membership _membershipToRemove = new();

    private RemoveMembershipModal _removeMembershipModal = new();
    private AddMembershipModal _addMembershipModal = new();
    private ChangeMembershipRole _changeMembershipRoleModal = new();
    
    protected override async Task OnInitializedAsync()
    {
        MembershipsList = await MembershipService.GetMembershipsForMember(Member.Id);
    }

    private Task OnEditMemberGroupLink_Clicked(int memberGroupId)
    {
        NavigationManager.NavigateTo($"/edit-group/{memberGroupId}");
        return Task.CompletedTask;
    }

    private async Task OnRemoveMembershipButton_Clicked(int groupId)
    {
        _membershipToRemove = MembershipsList.First(x => x.Id == groupId);
        await _removeMembershipModal.Show();
    }

    private async Task OnAddMembershipButton_Clicked()
    {
        await _addMembershipModal.Show();
    }

    private async Task OnEditRoleButton_Clicked(int membershipId)
    {
        _membershipToChangeRole = MembershipsList.First(x => x.Id == membershipId);
        await _changeMembershipRoleModal.Show();
    }

    private Task OnStateChanged()
    {
        StateHasChanged();
        return Task.CompletedTask;
    }
}