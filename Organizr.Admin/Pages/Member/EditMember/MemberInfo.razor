<Div>&nbsp;</Div>

<CardDeck>
    <Card ColumnSize="ColumnSize.Is8" Padding="Padding.Is0">
        <CardHeader TextWeight="TextWeight.Bold">
            Person Info
        </CardHeader>
        <CardBody>
            <Fields>
                <Field ColumnSize="ColumnSize.Is6">
                    <FieldLabel>Fornavn</FieldLabel>
                    <TextEdit @bind-Text="_firstName"/>
                </Field>

                <Field ColumnSize="ColumnSize.Is6">
                    <FieldLabel>Efternavn</FieldLabel>
                    <TextEdit @bind-Text="_lastName"/>
                </Field>

                <Field ColumnSize="ColumnSize.Is6">
                    <FieldLabel>Adresse</FieldLabel>
                    <TextEdit @bind-Text="_address"/>
                </Field>

                <Field ColumnSize="ColumnSize.Is6">
                    <FieldLabel>Telefonnummer</FieldLabel>
                    <TextEdit @bind-Text="_phoneNumber"/>
                </Field>

                <Field ColumnSize="ColumnSize.Is12">
                    <FieldLabel>Email</FieldLabel>
                    <TextEdit @bind-Text="_email"/>
                </Field>

                <Field ColumnSize="ColumnSize.Is6">
                    <FieldLabel>Køn</FieldLabel>
                    <Select TValue="Gender" @bind-SelectedValue="_gender">
                        <SelectItem Value="Gender.Female">Kvinde</SelectItem>
                        <SelectItem Value="Gender.Male">Mand</SelectItem>
                        <SelectItem Value="Gender.Undefined">Udefineret</SelectItem>
                    </Select>
                </Field>

                <Field ColumnSize="ColumnSize.Is6">
                    <Field>
                        <FieldLabel>Organisationsadministrator</FieldLabel>
                        <Check TValue="bool" @bind-Checked="_organizationAdministratorCheckbox">Aktiv</Check>
                        <FieldHelp>Dette vil gøre brugeren i stand til at logge ind på Administrations siden for Organizr</FieldHelp>
                    </Field>
                </Field>

                <Button Color="Color.Primary" Clicked="OnSavePersonInfoButton_Clicked" Margin="Margin.Is3">Gem</Button>
            </Fields>
        </CardBody>
    </Card>
</CardDeck>

<Div>&nbsp;</Div>

<CardDeck>
    <Card ColumnSize="ColumnSize.Is4" Padding="Padding.Is0">
        <CardHeader TextWeight="TextWeight.Bold">
            Password opsætning
        </CardHeader>
        <CardBody>
            <Fields>
                <Field>
                    <FieldLabel>Password</FieldLabel>
                    <TextEdit @bind-Text="_password"/>
                </Field>

                <Field ColumnSize="ColumnSize.Is6">
                    <FieldLabel>&nbsp;</FieldLabel>
                    <Button Color="Color.Primary" Size="Size.Small">Generer nyt password</Button>
                </Field>

                <Field ColumnSize="ColumnSize.Is6">
                    <Div>&nbsp;</Div>
                    <Button Color="Color.Primary">Gem</Button>
                    <Button Color="Color.Primary">Gem og send</Button>
                </Field>
            </Fields>
        </CardBody>
    </Card>
</CardDeck>

<Div>&nbsp;</Div>

<Heading Size="HeadingSize.Is5">
    Profil administration
</Heading>

<Card ColumnSize="ColumnSize.Is2">
    <Field>
        <Button Color="Color.Danger" Clicked="OnDeleteMemberButtonClicked" Margin="Margin.Is3">Slet medlem</Button>
    </Field>
</Card>

<Snackbar @ref="_snackbarSuccess" Color="SnackbarColor.Success">
    <SnackbarBody TextWeight="TextWeight.Bold">
        (@Member.Id) @Member.FirstName @Member.LastName er blevet opdateret
    </SnackbarBody>
</Snackbar>

<Snackbar @ref="_snackbarError" Color="SnackbarColor.Danger">
    <SnackbarBody TextWeight="TextWeight.Bold">
        Ændringerne kunne ikke gemmes
    </SnackbarBody>
</Snackbar>

<RemoveMemberModal @ref="_removeMemberModal" MemberToDelete="Member" OnMemberDeleted="@OnMemberDeleted"/>

@code {

    [CascadingParameter]
    public Member Member { get; set; } = new();

    private string _firstName = string.Empty;
    private string _lastName = string.Empty;
    private string _address = string.Empty;
    private string _phoneNumber = string.Empty;
    private string _email = string.Empty;
    private string _password = string.Empty;
    private Gender _gender;
    private bool _organizationAdministratorCheckbox;
    private bool _isMemberOrganizationAdministrator;
    private bool _firstRender = true;

    private Snackbar _snackbarSuccess = new();
    private Snackbar _snackbarError = new();
    private Snackbar _snackbarDeleted = new();
    private RemoveMemberModal _removeMemberModal = new();

    protected override async Task OnParametersSetAsync()
    {
        _firstName = Member.FirstName;
        _lastName = Member.LastName;
        _address = Member.Address;
        _phoneNumber = Member.PhoneNumber;
        _email = Member.Email;
        _gender = Member.Gender;
        if (!_firstRender)
        {
            _isMemberOrganizationAdministrator = await RoleService.IsUserOrganizationAdministrator(Member.Id);
            _organizationAdministratorCheckbox = _isMemberOrganizationAdministrator;    
        }
        _firstRender = false;
    }

    private async Task OnSavePersonInfoButton_Clicked()
    {
        Member.FirstName = _firstName;
        Member.LastName = _lastName;
        Member.Address = _address;
        Member.PhoneNumber = _phoneNumber;
        Member.Email = _email;
        Member.Gender = _gender;

        var updateSucceeded = await MemberService.UpdateMember(Member);

        if (_organizationAdministratorCheckbox != _isMemberOrganizationAdministrator)
        {
            updateSucceeded = await RoleService.UpdateMemberRole(Member.Id, _organizationAdministratorCheckbox);
        }

        if (updateSucceeded)
        {
            await _snackbarSuccess.Show();
        }
        else
        {
            await _snackbarError.Show();
        }
    }

    private async Task OnDeleteMemberButtonClicked()
    {
        await _removeMemberModal.Show();
    }

    private Task OnMemberDeleted()
    {
        NavigationManager.NavigateTo("/");
        return Task.CompletedTask;
    }

}