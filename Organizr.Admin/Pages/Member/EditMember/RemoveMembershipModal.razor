<Modal @ref="_removeMemberModal">
    <ModalContent>
        <ModalHeader>Fjern @Member.FirstName @Member.LastName fra @MembershipToRemove.MemberGroup.Name?</ModalHeader>
        <ModalBody>
            <Div>
                <Button Color="Color.Danger" Clicked="OnRemoveButton_Clicked">Slet</Button>
                <Button Color="Color.Secondary" Clicked="OnCancelButton_Clicked">Afbryd</Button>
            </Div>
        </ModalBody>
    </ModalContent>
</Modal>

<Snackbar @ref="_snackbarSuccess" Color="SnackbarColor.Success">
    <SnackbarBody TextWeight="TextWeight.Bold">
        @Member.FirstName @Member.LastName er fjernet fra @MembershipToRemove.MemberGroup.Name
    </SnackbarBody>
</Snackbar>

<Snackbar @ref="_snackbarError" Color="SnackbarColor.Danger">
    <SnackbarBody TextWeight="TextWeight.Bold">
        @Member.FirstName @Member.LastName kunne ikke fjernes fra @MembershipToRemove.MemberGroup.Name
    </SnackbarBody>
</Snackbar>

@code {

    [Parameter]
    public Member Member { get; set; } = new();

    [Parameter]
    public Membership MembershipToRemove { get; set; } = new();

    [Parameter]
    public EventCallback OnGroupRemoved { get; set; }

    private Modal _removeMemberModal = new();
    private Snackbar _snackbarSuccess = new();
    private Snackbar _snackbarError = new();
    
    public async Task Show()
    {
        await _removeMemberModal.Show();
    }

    private async Task OnRemoveButton_Clicked()
    {
        var result = await MembershipService.RemoveMembership(MembershipToRemove.Id);

        if (!result)
        {
            await _snackbarError.Show();
            return;
        }

        Member.Memberships.Remove(MembershipToRemove);
        await _removeMemberModal.Hide();
        await OnGroupRemoved.InvokeAsync();
        await _snackbarSuccess.Show();
    }

    private async Task OnCancelButton_Clicked()
    {
        await _removeMemberModal.Hide();
    }
}