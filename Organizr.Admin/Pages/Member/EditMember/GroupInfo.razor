<Div>&nbsp;</Div>

<Row>
    <SearchBar/>
    <Row Style="padding: 2rem" Flex="Flex.JustifyContent.Around">
        <Button Color="Color.Primary" Clicked="OnAddMemberButton_Clicked">Tilføj Medlem</Button>
    </Row>
</Row>

<Divider />

@if (Member.Groups.IsNullOrEmpty())
{
    <Heading Size="HeadingSize.Is5">
        (@Member.Id) @Member.FirstName @Member.LastName er ikke medlem af nogen grupper. 
    </Heading>
}
else
{
    <DataGrid TItem="@MemberGroup"
              Data="@Member.Groups"
              RowSelectable="_ => false">
        <DataGridColumns>
            <DataGridColumn Field="@nameof(MemberGroup.Id)" Caption="Gruppe Id" Sortable="true">
                <DisplayTemplate>
                    <Button Clicked="() => OnEditMemberGroupLink_Clicked(context.Id)" Color="Color.Link">@context.Id</Button>
                </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn Field="@nameof(MemberGroup.Name)" Caption="Gruppe Navn" Sortable="true" />
            <DataGridColumn Caption="Rolle" Sortable="true"></DataGridColumn>
            <DataGridColumn Field="@nameof(MemberGroup.Id)" Caption="Administrer">
                <DisplayTemplate>
                    <Button Size="Size.Small" Color="Color.Danger" Clicked="() => OnRemoveMemberFromGroupButton_Clicked(context.Id)">Fjern</Button>
                </DisplayTemplate>
            </DataGridColumn>
        </DataGridColumns>
    </DataGrid>
}

<GroupInfoRemoveGroupFromMemberModal @ref="_removeGroupFromMemberModal" Member="Member" GroupToBeRemoved="_groupToBeRemoved" OnGroupRemoved="OnStateChanged" />
<GroupInfoAddMemberToGroupModal @ref="_addMemberToGroupModal" Member="Member" OnGroupAdded="OnStateChanged"/>

@code {

    [CascadingParameter]
    public Member Member { get; set; } = new();

    private MemberGroup _groupToBeRemoved = new();
    private MemberGroup _groupToBeAdded = new();

    private GroupInfoRemoveGroupFromMemberModal _removeGroupFromMemberModal = new();
    private GroupInfoAddMemberToGroupModal _addMemberToGroupModal = new();

    private Task OnEditMemberGroupLink_Clicked(int memberGroupId)
    {
        NavigationManager.NavigateTo($"/edit-group/{memberGroupId}");
        return Task.CompletedTask;
    }

    private async Task OnRemoveMemberFromGroupButton_Clicked(int groupId)
    {
        _groupToBeRemoved = Member.Groups.First(x => x.Id == groupId);
        await _removeGroupFromMemberModal.Show();
    }
    
    private async Task OnAddMemberButton_Clicked()
    {
        await _addMemberToGroupModal.Show();
    }

    private Task OnStateChanged()
    {
        StateHasChanged();
        return Task.CompletedTask;
    }

}