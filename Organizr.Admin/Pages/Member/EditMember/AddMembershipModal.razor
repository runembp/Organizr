<Modal @ref="_addMemberModal">
    <ModalContent Centered>
        <ModalHeader>
            Opret medlemsskab for @Member.GetFullNameWithId()
        </ModalHeader>
        <ModalBody>
            <Field>
                <Select TValue="int" @bind-SelectedValue="_selectedGroupId">
                    <SelectItem Value="-1">Vælg gruppe</SelectItem>
                    @foreach (var group in _allGroups)
                    {
                        <SelectItem Value="group.Id">@group.Name</SelectItem>
                    }
                </Select>
            </Field>
            <Field>
                <FieldLabel>Administrator?</FieldLabel>
                <Check TValue="bool" @bind-Checked="_administratorForGroup">Ja</Check>
            </Field>
        </ModalBody>
        <ModalFooter>
            <Div>
                <Button Color="Color.Primary" Clicked="OnAddGroupButton_Clicked">Gem</Button>
                <Button Color="Color.Secondary" Clicked="OnCancelButton_Clicked">Afbryd</Button>
            </Div>
            <br/>
        </ModalFooter>
    </ModalContent>
</Modal>

<Snackbar @ref="_snackbarSuccess" Color="SnackbarColor.Success">
    <SnackbarBody TextWeight="TextWeight.Bold">
        @Member.GetFullNameWithId() er tilføjet til @_selectedGroup.Name 
    </SnackbarBody>
</Snackbar>

<Snackbar @ref="_snackbarError" Color="SnackbarColor.Danger">
    <SnackbarBody TextWeight="TextWeight.Bold">
        @Member.GetFullNameWithId() kunne ikke tilføjes til @_selectedGroup.Name 
    </SnackbarBody>
</Snackbar>

@code {
    [Parameter]
    public Member Member { get; set; } = new();

    [Parameter]
    public List<Membership> Memberships { get; set; } = new();
    
    [Parameter]
    public EventCallback OnMembershipAdded { get; set; }

    private List<MemberGroup> _allGroups = new();    
    private MemberGroup _selectedGroup = new();
    private int _selectedGroupId;
    private bool _administratorForGroup;
    
    private Modal _addMemberModal = new();
    private Snackbar _snackbarSuccess = new();
    private Snackbar _snackbarError = new();

    protected override async void OnAfterRender(bool firstRender)
    {
        _allGroups = await GroupService.GetAllGroupsMemberHasNoMembershipIn(Member.Id);
    }

    private async Task OnAddGroupButton_Clicked()
    {
        if (_selectedGroupId <= 0)
        {
            return;
        }
        
        _selectedGroup = _allGroups.First(x => x.Id == _selectedGroupId);

        var roleId = _administratorForGroup ? (int) GroupRole.Administrator : (int) GroupRole.Basic;
        var createdMembership = await MembershipService.AddMembership(_selectedGroupId, Member.Id, roleId);
        
        if (createdMembership is null)
        {
            await _snackbarError.Show();
            return;
        }

        Memberships.Add(createdMembership);
        await OnMembershipAdded.InvokeAsync();
        await _addMemberModal.Hide();
        await _snackbarSuccess.Show();
    }

    private async Task OnCancelButton_Clicked()
    {
        await _addMemberModal.Hide();
    }

    public async Task Show()
    {
        await _addMemberModal.Show();
    }

}